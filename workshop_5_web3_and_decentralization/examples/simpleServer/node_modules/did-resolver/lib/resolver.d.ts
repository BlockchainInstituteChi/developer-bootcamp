export interface DIDDocument {
    '@context': 'https://w3id.org/did/v1';
    id: string;
    publicKey: PublicKey[];
    authentication?: Authentication[];
    uportProfile?: any;
    service?: ServiceEndpoint[];
}
export interface ServiceEndpoint {
    id: string;
    type: string;
    serviceEndpoint: string;
    description?: string;
}
export interface PublicKey {
    id: string;
    type: string;
    owner: string;
    ethereumAddress?: string;
    publicKeyBase64?: string;
    publicKeyBase58?: string;
    publicKeyHex?: string;
    publicKeyPem?: string;
}
export interface Authentication {
    type: string;
    publicKey: string;
}
export interface ParsedDID {
    did: string;
    method: string;
    id: string;
    path?: string;
    fragment?: string;
}
export interface DIDResolver {
    (did: string, parsed: ParsedDID): Promise<null | DIDDocument>;
}
export declare function registerMethod(method: string, resolver: DIDResolver): void;
export declare function parse(did: string): ParsedDID;
export default function resolve(did: string): Promise<DIDDocument | null>;
