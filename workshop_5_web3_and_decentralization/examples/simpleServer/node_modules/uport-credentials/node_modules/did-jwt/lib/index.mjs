import{sha256 as r}from"js-sha256";import{keccak_256 as e}from"js-sha3";import{ec as t}from"elliptic";import n from"tweetnacl";import{encode as o}from"@stablelib/utf8";import{Buffer as i}from"buffer";import a from"uport-base64url";import u from"did-resolver";function c(e){return i.from(r.arrayBuffer(e))}function f(r){return"0x"+(t=i.from(r.slice(2),"hex"),i.from(e.arrayBuffer(t))).slice(-20).toString("hex");var t}var s=new t("secp256k1");function d(r,e){return void 0===e&&(e=64),r.length===e?r:"0".repeat(e-r.length)+r}function h(r){var e=s.keyFromPrivate(r);return function(r){try{var t=e.sign(c(r)),n=t.s,o=t.recoveryParam;return Promise.resolve({r:d(t.r.toString("hex")),s:d(n.toString("hex")),recoveryParam:o})}catch(r){return Promise.reject(r)}}}function l(r){return new Uint8Array(Array.prototype.slice.call(Buffer.from(r,"base64"),0))}function p(r){var e=l(r);return function(r){try{var t=o(r),u=n.sign.detached(t,e),c=a.encode(i.from(u));return Promise.resolve(c)}catch(r){return Promise.reject(r)}}}var m=new t("secp256k1");function v(r,e){void 0===e&&(e=!1);var t=a.toBuffer(r);if(t.length!==(e?65:64))throw new Error("wrong signature length");var n={r:t.slice(0,32).toString("hex"),s:t.slice(32,64).toString("hex")};return e&&(n.recoveryParam=t[64]),n}var w={ES256K:function(r,e,t){var n=c(r),o=v(e),i=t.find(function(r){return m.keyFromPublic(r.publicKeyHex,"hex").verify(n,o)});if(!i)throw new Error("Signature invalid for JWT");return i},"ES256K-R":function(r,e,t){var n=v(e,!0),o=c(r),i=m.recoverPubKey(o,n,n.recoveryParam),a=i.encode("hex"),u=i.encode("hex",!0),s=f(a),d=t.find(function(r){var e=r.publicKeyHex;return e===a||e===u||r.ethereumAddress===s});if(!d)throw new Error("Signature invalid for JWT");return d},Ed25519:function(r,e,t){var i=o(r),u=l(a.toBase64(e)),c=t.find(function(r){return n.sign.detached.verify(i,u,l(r.publicKeyBase64))});if(!c)throw new Error("Signature invalid for JWT");return c}};function y(r){var e=w[r];if(!e)throw new Error("Unsupported algorithm "+r);return e}function g(r){return"object"==typeof r&&"r"in r&&"s"in r}function E(r){return function(e,t){try{return Promise.resolve(t(e)).then(function(e){if(g(e))return function(t){var n=e.r,o=e.s,u=e.recoveryParam,c=i.alloc(r?65:64);if(i.from(n,"hex").copy(c,0),i.from(o,"hex").copy(c,32),r){if(void 0===u)throw new Error("Signer did not return a recoveryParam");c[64]=u}return a.encode(c)}();throw new Error("expected a signer function that returns a signature object instead of string")})}catch(r){return Promise.reject(r)}}}y.toSignatureObject=v;var b={ES256K:E(),"ES256K-R":E(!0),Ed25519:function(r,e){try{return Promise.resolve(e(r)).then(function(r){if(g(r))throw new Error("expected a signer function that returns a string instead of signature object");return r})}catch(r){return Promise.reject(r)}}},S=function(r,e){void 0===e&&(e={auth:null,audience:null,callbackUrl:null});try{var t=e.audience?D(e.audience):void 0,n=T(r),o=n.payload,i=n.header,a=n.signature,c=n.data;return Promise.resolve(function(r,e,t){try{var n=P[r];if(!n||0===n.length)throw new Error("No supported signature types for algorithm "+r);var o=D(e);return Promise.resolve(u(o)).then(function(e){if(!e)throw new Error("Unable to resolve DID document for "+o);var i=!t||(e.authentication||[]).map(function(r){return r.publicKey}),a=(e.publicKey||[]).filter(function(r){var e=r.type,o=r.id;return n.find(function(r){return r===e&&(!t||Array.isArray(i)&&i.indexOf(o)>=0)})});if(t&&(!a||0===a.length))throw new Error("DID document for "+o+" does not have public keys suitable for authenticationg user");if(!a||0===a.length)throw new Error("DID document for "+o+" does not have public keys for "+r);return{authenticators:a,issuer:o,doc:e}})}catch(r){return Promise.reject(r)}}(i.alg,o.iss,e.auth)).then(function(n){var u,f=n.doc,s=n.authenticators,d=n.issuer,h=y(i.alg)(c,a,s),l=Math.floor(Date.now()/1e3);if(h){if(o.iat&&o.iat>l+j)throw new Error("JWT not valid yet (issued in the future): iat: "+o.iat+" > now: "+l);if(o.exp&&o.exp<=l-j)throw new Error("JWT has expired: exp: "+o.exp+" < now: "+l);if(o.aud)if((u=o.aud)&&(u.match(/^did:/)||J(u))){if(!t)throw new Error("JWT audience is required but your app address has not been configured");if(t!==D(o.aud))throw new Error("JWT audience does not match your DID: aud: "+o.aud+" !== yours: "+t)}else{if(!e.callbackUrl)throw new Error("JWT audience matching your callback url is required but one wasn't passed in");if(o.aud!==e.callbackUrl)throw new Error("JWT audience does not match the callback url: aud: "+o.aud+" !== url: "+e.callbackUrl)}return{payload:o,doc:f,issuer:d,signer:h,jwt:r}}})}catch(r){return Promise.reject(r)}},x=function(r,e){var t=e.issuer,n=e.signer,o=e.alg,i=e.expiresIn;try{if(!n)throw new Error("No Signer functionality has been configured");if(!t)throw new Error("No issuing DID has been configured");var a={typ:"JWT",alg:o||K},u={iat:Math.floor(Date.now()/1e3),exp:void 0};if(i){if("number"!=typeof i)throw new Error("JWT expiresIn is not a number");u.exp=u.iat+Math.floor(i)}var c=[k(a),k(Object.assign({},u,r,{iss:t}))].join("."),f=function(r){var e=b[r];if(!e)throw new Error("Unsupported algorithm "+r);return e}(a.alg);return Promise.resolve(f(c,n)).then(function(r){return[c,r].join(".")})}catch(r){return Promise.reject(r)}},P={ES256K:["Secp256k1VerificationKey2018","Secp256k1SignatureVerificationKey2018","EcdsaPublicKeySecp256k1"],"ES256K-R":["Secp256k1VerificationKey2018","Secp256k1SignatureVerificationKey2018","EcdsaPublicKeySecp256k1"],Ed25519:["ED25519SignatureVerification"]},K="ES256K";function k(r){return a.encode(JSON.stringify(r))}var j=300;function J(r){return r.match(/^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/)}function D(r){if(r.match(/^did:/))return r;if(J(r))return"did:uport:"+r;throw new Error("Not a valid DID '"+r+"'")}function T(r){if(!r)throw new Error("no JWT passed into decodeJWT");var e=r.match(/^([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/);if(e)return{header:JSON.parse(a.decode(e[1])),payload:JSON.parse(a.decode(e[2])),signature:e[3],data:e[1]+"."+e[2]};throw new Error("Incorrect format JWT")}export{h as SimpleSigner,p as NaclSigner,S as verifyJWT,x as createJWT,T as decodeJWT,f as toEthereumAddress};
//# sourceMappingURL=index.mjs.map
